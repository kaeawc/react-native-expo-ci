name: "Commit"

on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - '*'

permissions:
  checks: write

jobs:
  android_unit_tests:
    name: "Unit Tests"
    runs-on: ubuntu-latest
    steps:
      - name: "Git Checkout"
        uses: actions/checkout@v4

      - name: "Restore Node Modules"
        uses: ./.github/actions/npm-task-run
        with:
          node-version: 21

      - uses: ./.github/actions/gradle-task-run
        with:
          gradle-tasks: "testDebugUnitTest"
          reuse-configuration-cache: false
          gradle-project-directory: "./android"

  node_unit_tests:
    name: "Unit Tests"
    runs-on: ubuntu-latest
    steps:
      - name: "Git Checkout"
        uses: actions/checkout@v4

      - name: "Run Unit Tests via NPM"
        uses: ./.github/actions/npm-task-run
        with:
          node-version: 21
          node-task: "test"

  spotless:
    name: "Spotless Check"
    runs-on: ubuntu-latest
    steps:
      - name: "Git Checkout"
        uses: actions/checkout@v4

      - name: "Restore Node Modules"
        uses: ./.github/actions/npm-task-run
        with:
          node-version: 21

      - uses: ./.github/actions/gradle-task-run
        with:
          gradle-tasks: "spotlessCheck"
          # Due to https://github.com/diffplug/spotless/issues/987
          reuse-configuration-cache: false
          gradle-project-directory: "./android"

  module-graph:
    name: "Module Graph Check"
    runs-on: ubuntu-latest
    steps:
      - name: "Git Checkout"
        uses: actions/checkout@v4

      - name: "Restore Node Modules"
        uses: ./.github/actions/npm-task-run
        with:
          node-version: 21

      - uses: ./.github/actions/gradle-task-run
        with:
          gradle-tasks: "assertModuleGraph"
          reuse-configuration-cache: false
          gradle-project-directory: "./android"

  android-lint:
    name: "Android Lint"
    runs-on: ubuntu-latest
    steps:
      - name: "Git Checkout"
        uses: actions/checkout@v4

      - name: "Restore Node Modules"
        uses: ./.github/actions/npm-task-run
        with:
          node-version: 21

      - uses: ./.github/actions/gradle-task-run
        with:
          gradle-tasks: "lintRelease"
          reuse-configuration-cache: false
          gradle-project-directory: "./android"

      - name: "Store Android Lint Report"
        uses: actions/upload-artifact@v3
        if: success()
        with:
          name: android-lint-report
          path: |
            app/build/reports/lint-results-release.html

  build-apk:
    name: "Build APK"
    runs-on: ubuntu-latest
    steps:
      - name: "Git Checkout"
        uses: actions/checkout@v4

      - name: "Restore Node Modules"
        uses: ./.github/actions/npm-task-run
        with:
          node-version: 21

      - uses: ./.github/actions/gradle-task-run
        with:
          gradle-tasks: "assembleDebug"
          reuse-configuration-cache: false
          gradle-project-directory: "./android"

      - name: "Check if APK was created"
        id: apk-output
        if: always() # always run even if the previous step fails
        uses: andstor/file-existence-action@v2
        with:
          files: "android/app/build/outputs/apk/debug/app-debug.apk"

      - name: "Store APK"
        uses: actions/upload-artifact@v3
        if: steps.apk-output.outputs.files_exists == 'true'
        with:
          name: apk
          path: android/app/build/outputs/apk/debug/app-debug.apk


  build-test-apk:
    name: "Build Test APK"
    runs-on: ubuntu-latest
    steps:
      - name: "Git Checkout"
        uses: actions/checkout@v4

      - name: "Restore Node Modules"
        uses: ./.github/actions/npm-task-run
        with:
          node-version: 21

      - uses: ./.github/actions/gradle-task-run
        with:
          gradle-tasks: "assembleAndroidTest"
          reuse-configuration-cache: false
          gradle-project-directory: "./android"

      - name: "Check if Test APK was created"
        id: apk-output
        if: always() # always run even if the previous step fails
        uses: andstor/file-existence-action@v2
        with:
          files: "app/build/outputs/apk/androidTest/debug/app-debug-androidTest.apk"

      - name: "Store Test APK"
        uses: actions/upload-artifact@v3
        if: steps.apk-output.outputs.files_exists == 'true'
        with:
          name: test-apk
          path: app/build/outputs/apk/androidTest/debug/app-debug-androidTest.apk

  ui-tests:
    name: "Android UI Tests"
    runs-on: ubuntu-latest
    if: github.secret_source == 'Actions'
    needs:
      - build-apk
      - build-test-apk
    steps:
      - name: "Git Checkout"
        uses: actions/checkout@v4

      - uses: actions/download-artifact@v3
        with:
          name: apk

      - uses: actions/download-artifact@v3
        with:
          name: test-apk

      - name: "Run tests on emulator.wtf"
        uses: emulator-wtf/run-tests@v0
        with:
          api-token: ${{ secrets.EW_API_TOKEN }}
          app: app-debug.apk
          test: app-debug-androidTest.apk
          outputs-dir: build/test-results

      - name: "Publish Test Report"
        uses: mikepenz/action-junit-report@v4
        if: always() # always run even if the tests fail
        with:
          check_name: "UI Test Report"
          report_paths: 'build/test-results/**/*.xml'
